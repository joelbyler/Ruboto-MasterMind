language: java
before_install:

  # use xvfb to start up a GUI environment
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"

  # download the latest android sdk and unzip
  - wget http://dl.google.com/android/android-sdk_r18-linux.tgz
  - tar -zxf android-sdk_r18-linux.tgz

  # This is a bit of a hack to get the android-15 arm abi installed
  - wget http://dl.google.com/android/repository/sysimg_armv7a-15_r02.zip
  - mkdir ~/builds/joelbyler/ADB/android-sdk-linux/system-images
  - mkdir ~/builds/joelbyler/ADB/android-sdk-linux/system-images/android-15
  - unzip sysimg_armv7a-15_r02.zip -d ~/builds/joelbyler/ADB/android-sdk-linux/system-images/android-15

  # setup your ANDROID_HOME and PATH environment variables
  # use ~/builds/[Github username]/[project]/android-sdk-linux
  - export ANDROID_HOME=~/builds/joelbyler/ADB/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # only update the sdk for the tools and platform-tools (1,2) and whatever api level
  # you are building for android (run "android list sdk" to get the full list.  9 = 2.3.3 or API level 10
  #- android list sdk --all
  - android update sdk -u -f --filter 1,2
  - android update sdk -u -f --filter android-15

  # Create an emulator for testing against
  - echo no | android create avd -n Android_4.0.3 -t 1 --force
  - echo "hw.ramSize=2048" >> ~/.android/avd/Android_4.0.3.i
  # Need to figure out how to get the emulator to start up properly
  #- emulator -avd Android_4.0.3 -port 5554 -no-window -no-audio -no-boot-anim &
  #- adb wait-for-device

language: ruby
rvm:
  - 1.9.3

#after_script:
  #- bundle exec rake test
